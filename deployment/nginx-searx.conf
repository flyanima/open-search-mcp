# Nginx配置 - Searx集群负载均衡
# Open Search MCP v2.0

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # 基础配置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 16M;

    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 上游服务器定义
    upstream searx_cluster {
        # 健康检查和负载均衡策略
        least_conn;
        
        # Searx节点
        server searx-node-1:8080 weight=10 max_fails=3 fail_timeout=30s;
        server searx-node-2:8080 weight=8 max_fails=3 fail_timeout=30s;
        server searx-node-3:8080 weight=6 max_fails=3 fail_timeout=30s;
        
        # 保持连接
        keepalive 32;
    }

    # 主要的Searx服务 - 端口80
    server {
        listen 80;
        server_name localhost;

        # 安全头
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "no-referrer";

        # 健康检查端点
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Searx搜索服务
        location / {
            proxy_pass http://searx_cluster;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 超时设置
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            # 缓存设置
            proxy_cache_bypass $http_pragma;
            proxy_cache_revalidate on;
            proxy_cache_min_uses 1;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            
            # 错误处理
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 10s;
        }

        # 静态资源缓存
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
            proxy_pass http://searx_cluster;
            proxy_set_header Host $host;
            
            expires 1d;
            add_header Cache-Control "public, immutable";
        }

        # API端点
        location /api/ {
            proxy_pass http://searx_cluster;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # API特定设置
            proxy_connect_timeout 3s;
            proxy_send_timeout 15s;
            proxy_read_timeout 15s;
        }

        # 统计端点
        location /stats {
            proxy_pass http://searx_cluster;
            proxy_set_header Host $host;
            
            # 限制访问
            allow 172.20.0.0/16;  # 只允许内网访问
            deny all;
        }

        # 错误页面
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # 直接访问节点1 - 端口81
    server {
        listen 81;
        server_name localhost;

        location / {
            proxy_pass http://searx-node-1:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    # 直接访问节点2 - 端口82
    server {
        listen 82;
        server_name localhost;

        location / {
            proxy_pass http://searx-node-2:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    # 监控和状态页面
    server {
        listen 8090;
        server_name localhost;

        # Nginx状态
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 172.20.0.0/16;
            deny all;
        }

        # 上游状态
        location /upstream_status {
            access_log off;
            allow 172.20.0.0/16;
            deny all;
            
            return 200 "Searx Cluster Status\n";
            add_header Content-Type text/plain;
        }
    }
}

# 流配置（用于TCP负载均衡，如果需要）
stream {
    # Redis负载均衡（如果需要）
    upstream redis_cluster {
        server redis-master:6379 weight=10;
        server redis-slave:6379 weight=5 backup;
    }

    server {
        listen 6379;
        proxy_pass redis_cluster;
        proxy_timeout 3s;
        proxy_connect_timeout 1s;
    }
}
